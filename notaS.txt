Ionic 4 JWT Authentication Tutorial: Using Angular HttpClient with Node & Express.js Server
https://www.techiediaries.com/ionic-jwt-authentication-httpclient/

Build:
========================
set ANDROID_SDK_ROOT=D:\Users\silvio.limeira\AppData\Local\Android\Sdk
set ANDROID_HOME=D:\Users\silvio.limeira\AppData\Local\Android\Sdk
set JAVA_HOME=C:\Program Files\Java\jdk1.8.0_181\bin

export ANDROID_SDK_ROOT=/d/Users/silvio.limeira/AppData/Local/Android/Sdk
export ANDROID_HOME=/d/Users/silvio.limeira/AppData/Local/Android/Sdk
export JAVA_HOME=/c/Program\ Files/Java/jdk1.8.0_181

echo $ANDROID_SDK_ROOT
echo $ANDROID_HOME
echo $JAVA_HOME

Add support for android or IOS:
$ ionic cordova platform add android --save
$ ionic cordova platform add ios --save

$ ionic cordova build android --prod --release
or
$ ionic cordova run android --prod --release



========================


$ npm install -g ionic

Creating an Ionic 4 Project
$ ionic start ionic-auth-demo blank --type=Angular

$ cd ionic-auth-demo
$ ionic Server

Creating an Angular Module
$ ionic generate module auth

Setting up Ionic Storage Module

$ npm install --save @ionic/storage
Next, include IonicStorageModule.forRoot() int te imports at auth.module

Creating the Angular Authentication Service

# ionic generate interface auth/user 

export interface User {
    id: number;
    name: string;
    email: string;
    password: string;
}

Also, you need generate an interface for server response:
$ ionic generate interface auth/auth-response

export interface AuthResponse {
    user: {
        id: number;
        name: string;
        email: string;
        access_token: string;
        expires_in: number;
    }
}

Next, generate the service using:
$ ionic generate service auth/auth 

update src/app/auth.service.ts and src/app/auth/auth.service.spec.ts 

#######
Creating and Running an Express.js Authentication Server
#######

$ mkdir express-auth-demo-server
$ cd express-auth-demo-server

$ npm init -y 

install the dependencies:

$ npm install --save express body-parser sqlite3 bcryptjs jsonwebtoken cors

You can use cURL to send POST requests to the authentication endpoints before creating the Ionic 4 UI.
First run this command in a new terminal to register a user:
$ curl -H "Content-Type: application/json" -d '{"email":"test@test.com","name":"test", "password":"test"}' http://localhost:3000/register

Next, run this command to login the user:
$ curl -H "Content-Type: application/json" -d '{"email":"test@test.com", "password":"test"}' http://localhost:3000/login

#####
Ionic 4 Forms Tutorial: Login & Register UI Example with theming
https://www.techiediaries.com/ionic-ui-forms-theming/
#####
 
Creating the Register Page
$ ionic generate page auth/register

It will also update the src/app/app-routing.module.ts file to enable routing to this page by adding
the following route:
{ path:  'register', loadChildren:  './auth/register/register.module#RegisterPageModule' },

Open the src/app/auth/register/register.page.ts file and import then inject AuthService and Router:


Creating a Login Page
$ ionic generate page auth/login

the src/app/app-routing.module.ts will be updated with the following route:
{ path:  'login', loadChildren:  './auth/login/login.module#LoginPageModule' },
The loadChildren property is used to lazy load the login module


